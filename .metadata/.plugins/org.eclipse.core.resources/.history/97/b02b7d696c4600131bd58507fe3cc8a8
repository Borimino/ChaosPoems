package chaosPoems;

import java.lang.StringBuffer;
import java.net.URL;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

import javax.xml.parsers.ParserConfigurationException;
import javax.xml.parsers.SAXParser;
import javax.xml.parsers.SAXParserFactory;

import org.xml.sax.Attributes;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;
import org.xml.sax.helpers.DefaultHandler;

public class XMLHandler extends DefaultHandler {


	
	private ArrayList<String> snippets;
	private String tempSnippet;
	private String tempTitle;
	private StringBuffer bufferString;

	public XMLHandler() {

		snippets = new ArrayList<String>();
		bufferString = new StringBuffer();

	}

	/**
	 * Resonsible for parsing the document
	 */
	public void parseDocument(String url) {
		// Adds a factory
		SAXParserFactory factory = SAXParserFactory.newInstance();

		try {

			// adds a n new instance of parser

			SAXParser parser = factory.newSAXParser();

			//Sets user Agent
			System.setProperty("http.agent", "ChaosPoemSearch");
			//Contructs url and stream xml to parser 
			URL xmllink = new URL(url);
			parser.parse(new InputSource(xmllink.openStream()), this);

		} catch (SAXException se) {
			se.printStackTrace();
		} catch (ParserConfigurationException pce) {
			pce.printStackTrace();
		} catch (IOException ie) {
			ie.printStackTrace();
		}

	}

	public void printlist() {

		for (String l : snippets) {
			System.out.println(l);
		}
	}

	// Event handlers

	public void startElement(String uri, String localName, String element,
			Attributes attributes) throws SAXException {
		tempSnippet = "";
		if (element.equalsIgnoreCase("p")) {
			tempSnippet = attributes.getValue("snippet");
			snippets.add(tempSnippet);
			System.out.println(tempSnippet);

		}

		if (element.equalsIgnoreCase("title")) {

			int l = bufferString.length();
			bufferString.delete(0, l);
		}

	}

	public void endElement(String uri, String localName, String element) {

		if (element.equalsIgnoreCase("title")) {
			snippets.add(bufferString.toString());

		}
	}

	@Override
	public void characters(char[] ch, int start, int length)
			throws SAXException {

		// tempTitle = new String(ch, start, length);
		int l = bufferString.length();
		bufferString.insert(l, new String(ch, start, length)); // Inserts
																// characters as
																// string in end
																// of buffer

	}

}