package chaosPoems;

import java.io.IOException;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

import javax.xml.parsers.ParserConfigurationException;
import javax.xml.parsers.SAXParser;
import javax.xml.parsers.SAXParserFactory;

import org.xml.sax.Attributes;
import org.xml.sax.SAXException;
import org.xml.sax.helpers.DefaultHandler;

public class XMLHandler extends DefaultHandler {

	private ArrayList<String> snippets;
	private String tempSnippet;
	private String tempTitle;

	public XMLHandler() {

		snippets = new ArrayList<String>();

	}

	/**
	 * Resonsible for parsing the document
	 */
	public void parseDocument(String path) {
		// Adds a factory
		SAXParserFactory factory = SAXParserFactory.newInstance();

		try {

			// adds a n new instance of parser

			SAXParser parser = factory.newSAXParser();

			// Parse file
			parser.parse(path, this);

		} catch (SAXException se) {
			se.printStackTrace();
		} catch (ParserConfigurationException pce) {
			pce.printStackTrace();
		} catch (IOException ie) {
			ie.printStackTrace();
		}

	}

	// Event handlers

	public void startElement(String uri, String localName, String qName,
			Attributes attributes) throws SAXException {
		tempSnippet = "";
		if (qName.equalsIgnoreCase("p")) {
			tempSnippet = attributes.getValue("snippet");
			snippets.add(tempSnippet);

		}

	}

	public void characters(char[] ch, int start, int length)
			throws SAXException {
		tempSnippet = new String(ch, start, length);
	}

	public void endElement(String uri, String localName, String qName){
	
	if (qName.equalsIgnoreCase("title")){
		 
		snippets.add(tempTitle);
	}
	
}
}